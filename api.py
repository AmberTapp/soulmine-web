# api.py - –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TON API –∏ Jetton-–±–∞–ª–∞–Ω—Å–æ–º
import requests
import time

# –ë–∞–∑–æ–≤—ã–π URL TON API (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –±–µ–∑ –∫–ª—é—á–∞)
TONAPI_URL = "https://tonapi.io/v2"

# –ê–¥—Ä–µ—Å Jetton Master ($LOVE) ‚Äî –∑–∞–º–µ–Ω–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
JETTON_MASTER_ADDRESS = "EQAf1n9pHB4gITeBj4VA6jYKa4QKAs7e1z55SQY3DnYme-Yj"

# –ö—ç—à –±–∞–ª–∞–Ω—Å–æ–≤ (—á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API)
_balance_cache = {}
CACHE_TTL = 300  # 5 –º–∏–Ω—É—Ç


def get_jetton_balance(user_ton_address: str) -> float:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–∞ $LOVE –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ—à–µ–ª—å–∫–∞.
    :param user_ton_address: str (–Ω–∞–ø—Ä–∏–º–µ—Ä, UQB...)
    :return: float (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123.456789)
    """
    now = time.time()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if user_ton_address in _balance_cache:
        cached_time, balance = _balance_cache[user_ton_address]
        if now - cached_time < CACHE_TTL:
            return balance

    try:
        # –ó–∞–ø—Ä–æ—Å –∫ tonapi.io
        url = f"{TONAPI_URL}/accounts/{user_ton_address}/jettons"
        headers = {"accept": "application/json"}
        response = requests.get(url, headers=headers, timeout=10)

        if response.status_code != 200:
            print(f"‚ùå TON API –æ—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return 0.0

        data = response.json().get("balances", [])
        love_balance = 0.0

        for jetton in 
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å Jetton Master
            if jetton.get("jetton", {}).get("address") == JETTON_MASTER_ADDRESS:
                amount_str = jetton.get("balance", "0")
                decimals = jetton.get("jetton", {}).get("decimals", 9)

                try:
                    amount = int(amount_str)
                    love_balance = amount / (10 ** decimals)
                except ValueError:
                    love_balance = 0.0
                break

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        _balance_cache[user_ton_address] = (now, love_balance)
        return love_balance

    except requests.exceptions.RequestException as e:
        print(f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ TON API: {e}")
        return 0.0
    except Exception as e:
        print(f"üî¥ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
        return 0.0


# === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å) ===
if __name__ == "__main__":
    test_address = "UQCvDWfC2cM8uR5FhLxGd1aXtVqoZbH7N6T3m4Y8s9W7R2P1"  # –ü—Ä–∏–º–µ—Ä
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –±–∞–ª–∞–Ω—Å $LOVE –¥–ª—è {test_address}...")
    bal = get_jetton_balance(test_address)
    print(f"üí∞ –ë–∞–ª–∞–Ω—Å $LOVE: {bal:.6f}")